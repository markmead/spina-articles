- content_for(:permanent_notice) do
  - unless current_account.robots_allowed?
    .permanent-notice.permanent-notice-info
      = icon('search')
      %p
        =t 'spina.pages.invisible_to_search_engines'
        %small=t 'spina.pages.invisible_to_search_engines_description'

- if @article.errors.any?
  - content_for :notifications do
    .notification.notification-danger.animated.fadeInRight
      = icon('exclamation')
      .notification-message
        =t 'spina.notifications.alert'
        %small= @article.errors.full_messages.join('<br />').html_safe
      = link_to '#', data: {close_notification: true} do
        = icon('cross')

= form_for [:admin, @article], multipart: true, html: {autocomplete: "off"} do |f|
  %header#header
    .header-title
      .breadcrumbs= render_breadcrumbs separator: '<div class="divider"></div>'
      - unless @article.new_record?
        = link_to article_path(@article), target: :blank, class: 'button button-hollow button-small' do
          %i.icon.icon-export{style: 'margin: 0'}

    #header_actions
      %button.button.button-primary{type: 'submit'}
        = icon('check')
        Save
      = link_to t('spina.cancel'), spina.admin_articles_path, class: 'button button button-secondary'

    %nav#secondary.tabs
      %ul
        - @tabs.each_with_index do |tab, i|
          %li{class: (i==0 ? 'active' : '')}
            = link_to t("spina.articles.#{tab}"), "##{tab}"

  - @tabs.each do |tab|
    = render "form_#{tab}", f: f

- unless @article.new_record?
  .pull-right= link_to t('spina.permanently_delete'), spina.admin_article_path(@article.id), method: :delete, data: {confirm: t('spina.articles.delete_confirmation', subject: @article.title) }, class: 'button button-link button-danger'
